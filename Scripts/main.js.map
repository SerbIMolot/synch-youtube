{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Scripts/util.js","webpack:///./node_modules/js-video-url-parser/dist/jsVideoUrlParser.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;ACjF4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,eAAe;AAC3D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;AACD;;AAEA,yBAAyB,+BAA+B,EAAE;AAC1D,yBAAyB,sBAAsB,EAAE;AACjD,2BAA2B,yBAAyB,EAAE;;;AAGtD;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,OAAO;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB,kCAAkC;;AAEzD;AACA,CAAC;;AAED;AACA;;AAEA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,kEAAkE;;AAErG,CAAC;AACD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;;AAET;AACA,KAAK;AACL,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4CAA4C;AAC5C,SAAS;AACT;AACA,4CAA4C;AAC5C,SAAS;AACT;AACA;AACA,yCAAyC;AACzC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qCAAqC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;;AAEA,SAAS;AACT;;AAEA;;AAEA,SAAS;AACT;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,C;;;;;;;;;;;AC38BA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACuD;AACzD,CAAC,qBAAqB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;AACA;;AAEA,UAAU,iBAAiB;AAC3B;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yEAAyE,kBAAkB;AAC3F;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;;AAEpD;AACA,4EAA4E;AAC5E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yFAAyF,GAAG;AAC5F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,yBAAyB;;AAEzB;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,CAAC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./Scripts/util.js\");\n","﻿\r\nimport urlParser from \"js-video-url-parser\";\r\n//import request from 'request';\r\nvar getUrlParams = function (url) {\r\n    var params = {};\r\n    (url + '?').split('?')[1].split('&').forEach(\r\n        function (pair) {\r\n            pair = (pair + '=').split('=').map(decodeURIComponent);\r\n            if (pair[0].length) {\r\n                params[pair[0]] = pair[1];\r\n            }\r\n        });\r\n\r\n    return params;\r\n};\r\nvar link = window.location.href.split('/');\r\nvar siteLocation;\r\nvar currentRoomName;\r\n\r\nif (link[5] !== undefined) {\r\n    currentRoomName = link[5];\r\n    var virtDir = link[3];\r\n    siteLocation = 'https://' + window.location.host + '/' + virtDir;\r\n\r\n}\r\nelse {\r\n    currentRoomName = link[4];\r\n    siteLocation = 'https://' + window.location.host;\r\n}\r\nfunction loadChatsView() {\r\n    $.ajax({\r\n        url: siteLocation + '/Room/UpdateGrid?roomName=' + roomName,\r\n        type: 'post',\r\n        cache: false,\r\n        async: true,\r\n        success: function (result) {\r\n            console.log(result);\r\n            $('#partialChats').html(result);\r\n        },\r\n        error: function (xhr, status, error) {\r\n            var err = eval(\"(\" + xhr.responseText + \")\");\r\n            alert(err.Message);\r\n        }\r\n    });\r\n}\r\n\r\nfunction charNameclick(roomName) {\r\n    console.log(roomName);\r\n    $.connection.groupHubs.state.currentChatRoom = roomName;\r\n    $.connection.groupHubs.server.switchCurrentRoom(roomName);\r\n    loadMessageView(roomName);\r\n}\r\nfunction loadMessageView(roomName) {\r\n    var link;\r\n    $.ajax({\r\n        url: siteLocation + '/Room/UpdateChat?roomName=' + roomName,\r\n        type: 'post',\r\n        cache: false,\r\n        async: true,\r\n        success: function (result) {\r\n            console.log(result);\r\n            $('#messages').html(result);\r\n            currentRoomName = roomName;\r\n\r\n            updateScroll();\r\n        },\r\n        error: function (jqXHR, exception) {\r\n            var msg = '';\r\n            if (jqXHR.status === 0) {\r\n                msg = 'Not connect.\\n Verify Network.';\r\n            } else if (jqXHR.status == 404) {\r\n                msg = 'Requested page not found. [404]';\r\n            } else if (jqXHR.status == 500) {\r\n                msg = 'Internal Server Error [500].';\r\n            } else if (exception === 'parsererror') {\r\n                msg = 'Requested JSON parse failed.';\r\n            } else if (exception === 'timeout') {\r\n                msg = 'Time out error.';\r\n            } else if (exception === 'abort') {\r\n                msg = 'Ajax request aborted.';\r\n            } else {\r\n                msg = 'Uncaught Error.\\n' + jqXHR.responseText;\r\n            }\r\n            alert(msg);\r\n        }\r\n    });\r\n    $.ajax({\r\n        url: siteLocation + '/Room/UpdateGrid?roomName=' + roomName,\r\n        type: 'post',\r\n        cache: false,\r\n        async: true,\r\n        success: function (result) {\r\n            console.log(result);\r\n            chatName.innerText = roomName;\r\n            $('#partialChats').html(result);\r\n        },\r\n        error: function (jqXHR, exception) {\r\n            var msg = '';\r\n            if (jqXHR.status === 0) {\r\n                msg = 'Not connect.\\n Verify Network.';\r\n            } else if (jqXHR.status == 404) {\r\n                msg = 'Requested page not found. [404]';\r\n            } else if (jqXHR.status == 500) {\r\n                msg = 'Internal Server Error [500].';\r\n            } else if (exception === 'parsererror') {\r\n                msg = 'Requested JSON parse failed.';\r\n            } else if (exception === 'timeout') {\r\n                msg = 'Time out error.';\r\n            } else if (exception === 'abort') {\r\n                msg = 'Ajax request aborted.';\r\n            } else {\r\n                msg = 'Uncaught Error.\\n' + jqXHR.responseText;\r\n            }\r\n            alert(msg);\r\n        }\r\n    });\r\n    currentRoomName = roomName;\r\n    $.connection.groupHubs.server.setCallerCurrentTime(roomName);\r\n}\r\n\r\nfunction DeleteCurrentChat() {\r\n    $.ajax({\r\n        url: siteLocation + '/Room/DeleteChat?roomName=' + currentRoomName,\r\n        type: 'post',\r\n        cache: false,\r\n        async: true,\r\n        success: function (result) {\r\n            console.log(result);\r\n            $('#partialChats').html(result);\r\n        },\r\n        error: function (xhr, status, error) {\r\n            var err = eval(\"(\" + xhr.responseText + \")\");\r\n            alert(err.Message);\r\n        }\r\n    });\r\n}\r\nfunction onCreateClick() {\r\n    var room = $('#createText').val();\r\n    if (room.length != 0) {\r\n        console.log(room);\r\n        console.log(siteLocation + '/Room/JoinRoom?roomName=' + room);\r\n        $.ajax({\r\n            url: siteLocation + '/Room/CreateRoom?roomName=' + room,\r\n            type: 'post',\r\n            cache: false,\r\n            async: true,\r\n            success: function (result) {\r\n                console.log(result);\r\n                //$('#partialChats').html(result);\r\n                window.location.href = \"Chat/\" + room;\r\n                //window.history.pushState({roomName: room}, \"Title\", \"/Room/Chat\");\r\n                loadMessageView(room);\r\n            },\r\n            error: function (jqXHR, exception) {\r\n                var msg = '';\r\n                if (jqXHR.status === 0) {\r\n                    msg = 'Not connect.\\n Verify Network.';\r\n                } else if (jqXHR.status == 404) {\r\n                    msg = 'Requested page not found. [404]';\r\n                } else if (jqXHR.status == 500) {\r\n                    msg = 'Internal Server Error [500].';\r\n                } else if (exception === 'parsererror') {\r\n                    msg = 'Requested JSON parse failed.';\r\n                } else if (exception === 'timeout') {\r\n                    msg = 'Time out error.';\r\n                } else if (exception === 'abort') {\r\n                    msg = 'Ajax request aborted.';\r\n                } else {\r\n                    msg = 'Uncaught Error.\\n' + jqXHR.responseText;\r\n                }\r\n                alert(msg);\r\n            }\r\n        });\r\n\r\n        $('#createText').val('');\r\n\r\n    }\r\n}\r\nfunction onJoinClick() {\r\n    var room = $('#joinRoomText').val();\r\n    if (room.length != 0) {\r\n        console.log(room);\r\n        console.log(siteLocation + '/Room/JoinRoom?roomName=' + room);\r\n        $.ajax({\r\n            url: siteLocation + '/Room/JoinRoom?roomName=' + room,\r\n            type: 'post',\r\n            cache: false,\r\n            async: true,\r\n            success: function (result) {\r\n                // $.connection.groupHubs.server.joinRoom(roomName);\r\n                window.location.href = \"Chat/\" + room;\r\n                console.log(result);\r\n                $('#partialChats').html(result);\r\n                loadMessageView(room);\r\n            },\r\n            error: function (jqXHR, exception) {\r\n                var msg = '';\r\n                if (jqXHR.status === 0) {\r\n                    msg = 'Not connect.\\n Verify Network.';\r\n                } else if (jqXHR.status == 404) {\r\n                    msg = 'Requested page not found. [404]';\r\n                } else if (jqXHR.status == 500) {\r\n                    msg = 'Internal Server Error [500].';\r\n                } else if (exception === 'parsererror') {\r\n                    msg = 'Requested JSON parse failed.';\r\n                } else if (exception === 'timeout') {\r\n                    msg = 'Time out error.';\r\n                } else if (exception === 'abort') {\r\n                    msg = 'Ajax request aborted.';\r\n                } else {\r\n                    msg = 'Uncaught Error.\\n' + jqXHR.responseText;\r\n                }\r\n                alert(msg);\r\n            }\r\n        });\r\n        $('#joinRoomText').val('');\r\n\r\n\r\n    }\r\n}\r\nfunction OpenYoutube() {\r\n    $.ajax({\r\n        url: siteLocation + '/Room/YoutubePlayer',\r\n        type: 'get',\r\n        cache: false,\r\n        async: true,\r\n        success: function (result) {\r\n            console.log(result);\r\n            $('#modDialog').modal('show');\r\n        },\r\n        error: function (xhr, status, error) {\r\n            var err = eval(\"(\" + xhr.responseText + \")\");\r\n            alert(err.Message);\r\n        }\r\n    });\r\n}\r\n//function onJoinClick() {\r\n//    var roomName = $('#joinRoomText').val();\r\n//    $.connection.groupHubs.server.joinRoom(roomName);\r\n//\r\n//    loadMessageView(roomName)\r\n//} \r\n$('body').on('click', '.createBtn', function () {\r\n    var msg = $('#createText').val();\r\n    if (msg.length != 0) {\r\n        console.log(msg);\r\n\r\n        $('#createText').val('');\r\n\r\n    }\r\n});\r\nfunction preview(source) {\r\n\r\n    //.done(function () { console.log(\"second success\"); })\r\n    //.fail(function () { console.log(\"error\"); })\r\n    //.always(function () { console.log(\"complete\"); });\r\n\r\n\r\n    //var videos = JSON.parse(videosJson);\r\n    //  videopl.playlist.currentItem(index)\r\n\r\n}\r\nfunction httpGet(theUrl) {\r\n    var xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open(\"GET\", theUrl, true); // false for synchronous request\r\n\r\n    xmlHttp.addEventListener(\"load\", function (event) {\r\n        console.log(this);\r\n    });\r\n    xmlHttp.send(null);\r\n    return xmlHttp.responseText;\r\n}\r\n$(\"#write_link\").on('input', function () {\r\n    var $item = $(this);\r\n        input = $item.val();\r\n    if (input.includes(\"youtube\") && (input.includes(\"watch\") || input.includes(\"list\"))) {\r\n        $(\"#playlist-ui2\").empty();\r\n        var linkParams = getParams(input);\r\n        var playlistVids;\r\n        var url = \"https://www.youtube.com/list_ajax?style=json&action_get_list=1&list=\" + linkParams.list + \"&index=\" + 0 + \"&hl=en\";\r\n        //var dawes = request.get(url);\r\n        $.getJSON(url, function (data, status, xhr) {\r\n            alert(data.data.title);\r\n            // data contains the JSON-Object below\r\n        });\r\n        // httpGetAsync(url, addElementPreview);\r\n        //fetch(url).then(respn => respn.ok ? respn.json() : Promise.reject(undefined)).then(data => console.log(data))\r\n        //    .catch(err => console.log(err));\r\n        //\r\n        //fetch(url).then((resp) => resp.text()).then(function (data) {\r\n        //    dawes = data;\r\n        //});\r\n        //var blobs = fetch(url)\r\n        //    .then(res => res.blob()) // Gets the response and returns it as a blob\r\n        //    .then(blob => {\r\n        //        // Here's where you get access to the blob\r\n        //        // And you can use it for whatever you want\r\n        //        // Like calling ref().put(blob)\r\n        //\r\n        //        // Here, I use it to make an image appear on the page\r\n        //        var objectURL = URL.createObjectURL(blob);\r\n        //        var myImage = new Image();\r\n        //        myImage.src = objectURL;\r\n        //        document.getElementById('myImg').appendChild(myImage)\r\n        //    });\r\n        ////$.getJSON( url, function (data) {\r\n        ////    playlistVids = JSON.parse(data);\r\n        ////    // JSON result in `data` variable\r\n        ////})\r\n        //var xhr = new XMLHttpRequest();\r\n        //xhr.open(\r\n        //    'GET',\r\n        //    url,\r\n        //    true\r\n        //);\r\n        //xhr.responseType = 'json';\r\n        //xhr.setRequestHeader('Content-Type', 'json');\r\n        //xhr.setRequestHeader(\"Access-Control-Allow-Origin\", '*');\r\n        //xhr.setRequestHeader(\"User-Agent\", \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\");\r\n        //xhr.send();\r\n        //xhr.onreadystatechange = function () {\r\n        //    if (xhr.readyState != 4) {\r\n        //        return\r\n        //    }\r\n        //    if (xhr.status === 200) {\r\n        //        console.log('result', xhr.responseText)\r\n        //        console.log('result', JSON.parse(xhr.responseText))\r\n        //\r\n        //    } else {\r\n        //        console.log('err', xhr.responseText)\r\n        //    }\r\n        //}\r\n        // request = new Request('/json', {\r\n        // headers: new Headers({\r\n        //     'Content-Type': 'Document'\r\n        // })\r\n        //\r\n        //\r\n        //ch(request)\r\n        // .then(function () {\r\n        //     alert(\"strhbf\")/* handle response */\r\n        //\r\n        //var list = urlParser.parse('http://www.youtube.com/playlist?list=PL46F0A159EC02DF82');\r\n        var test = httpGet(url);\r\n        //$.ajax({\r\n        //    url: url,\r\n        //    type: \"GET\",\r\n        //    beforeSend: function (request) {\r\n        //    },\r\n        //    dataType: \"json\",\r\n        //    success: function (data) {\r\n        //        alert(data);\r\n        //    },\r\n        //    error: function (XMLHttpRequest, textStatus, errorThrown) {\r\n        //        alert(\"error\");\r\n        //        console.log(\"REQUEST\" + XMLHttpRequest.toString());\r\n        //        console.log(\"textStatus\" + textStatus.toString());\r\n        //        console.log(\"errorThrown\" + errorThrown.toString());\r\n        //    }\r\n        //\r\n        //});\r\n        ////preview(input);\r\n        //$.connection.groupHubs.server.getVideosFromLink(input);\r\n\r\n    } else {\r\n        $(\"#playlist-ui2\").empty();\r\n        document.getElementById(\"elements_count\").innerHTML = \"\";\r\n    }\r\n});\r\n//function writeLinkInput() {\r\n//    var input = $(\"#write_link\").val();\r\n//    if (input.includes(\"youtube\") && (input.includes(\"watch\") || input.includes(\"list\"))) {\r\n//        $(\"#playlist-ui2\").empty();\r\n//        preview(input);\r\n//        //$.connection.groupHubs.server.getVideosFromLink(input);\r\n//\r\n//    } else {\r\n//        $(\"#playlist-ui2\").empty();\r\n//        document.getElementById(\"elements_count\").innerHTML = \"\";\r\n//    }\r\n//};\r\n\r\n$('body').on('click', '.link_send_btn', function () {\r\n    var msg = $('#write_link').val();\r\n    if (msg.length != 0) {\r\n        console.log(msg);\r\n        $.connection.groupHubs.server.changeVideoSource(currentRoomName, msg).done(function (videos) {\r\n            // alert(\"Added\");\r\n        });\r\n        //videopl.src({ type: \"video/youtube\", src: msg });\r\n\r\n    }\r\n});\r\n\r\n$('body').on('click', '.ytp-suggestion-link', function () {\r\n    //  alert(\"Added\");\r\n\r\n});\r\n$('#vid1').on('click', function () {\r\n    // alert(\"inside suggestion-link\");\r\n});\r\n$('.ytp-suggestion-image').on('click', function () {\r\n    // alert(\"inside suggestion-image\");\r\n});\r\n$('.ytp-suggestion-overlay').on('click', function () {\r\n    // alert(\"inside ytp-suggestion-overlay\");\r\n});\r\nfunction playlistButtonPress() {\r\n    if (document.getElementById('playlist-ui').style.width == '0px' || document.getElementById('playlist-ui').style.width == '') {\r\n        document.getElementById('playlist-ui').style.width = '20%';\r\n        document.getElementById('playlist-ui').style.height = '100%';\r\n        document.getElementById('playlist_slide').style.marginRight = '20%';\r\n    }\r\n    else if (document.getElementById('playlist-ui').style.width == '20%') {\r\n        document.getElementById('playlist-ui').style.width = '0';\r\n        document.getElementById('playlist-ui').style.height = '0';\r\n        document.getElementById('playlist_slide').style.marginRight = '0%';\r\n    }\r\n}\r\n/*\r\nfunction openSlidePlaylist() {\r\n    document.getElementById('playlist-ui').style.width = '25%';\r\n}\r\nfunction closeSlidePlaylist() {\r\n    document.getElementById('playlist-ui').style.width = '0';\r\n}\r\n*/\r\n(function ($, sr) {\r\n\r\n    // debouncing function from John Hann\r\n    // http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/\r\n    var debounce = function (func, threshold, execAsap) {\r\n        var timeout;\r\n\r\n        return function debounced() {\r\n            var obj = this, args = arguments;\r\n            function delayed() {\r\n                if (!execAsap)\r\n                    func.apply(obj, args);\r\n                timeout = null;\r\n            }\r\n\r\n            if (timeout)\r\n                clearTimeout(timeout);\r\n            else if (execAsap)\r\n                func.apply(obj, args);\r\n\r\n            timeout = setTimeout(delayed, threshold || 100);\r\n        };\r\n    };\r\n    // smartresize \r\n    jQuery.fn[sr] = function (fn) { return fn ? this.bind('resize', debounce(fn)) : this.trigger(sr); };\r\n\r\n})(jQuery, 'smartresize');\r\n/*\r\n$(function () {\r\n\r\n    // Find all <video> element\r\n    var $allVideos = $('video'),\r\n\r\n        // The element that is fluid width\r\n        $fluidEl = $('#content_container');\r\n\r\n    // Figure out and save the aspect ratio for each <video> element on the page\r\n    $allVideos.each(function () {\r\n\r\n        $(this)\r\n            // values from <video> height and width attributes\r\n            .data('aspectRatio', this.height / this.width)\r\n\r\n            // and remove the hard coded width/height\r\n            .removeAttr('height')\r\n            .removeAttr('width');\r\n\r\n    });\r\n\r\n    // When the window is resized\r\n    $(window).smartresize(function () {\r\n\r\n        var newWidth = $fluidEl.width();\r\n\r\n        // Resize all <video> according to their own aspect ratio\r\n        $allVideos.each(function () {\r\n\r\n            var $el = $(this);\r\n            $el\r\n                .width(newWidth)\r\n                .height(newWidth * $el.data('aspectRatio'));\r\n\r\n        });\r\n\r\n        // Kick off one resize to fix all videos on page load\r\n    }).resize();\r\n});*/\r\n//$scope.currentRoomName = \"\";\r\n//$rootScope.$on(\"chatRoomChanged\", function (args, room)\r\n//{\r\n//    $scope.currentRoomName = room;\r\n//});\r\n/*videopl.on('seeked', function () {\r\n    if (clientSeek > 0) {\r\n        $.connection.groupHubs.server.timeUpdate(currentRoomName, this.currentTime());\r\n        console.log(this.currentTime());\r\n        clientSeek = 0;\r\n    }\r\n    else {\r\n        clientSeek = 1;\r\n    }\r\n})*/\r\nif (currentRoomName !== undefined) {\r\n\r\n    var videopl = videojs('vid1');\r\n\r\n    var serverCurrentTimeCall = 0;\r\n\r\n    videopl.on('playing', function () {\r\n        $.connection.groupHubs.server.groupPlay(currentRoomName);\r\n    });\r\n    videopl.on('pause', function () {\r\n        console.log('TESTSEMT: OSEMT: OMSET');\r\n        $.connection.groupHubs.server.groupPause(currentRoomName);\r\n    });\r\n    videopl.on('canplay', (event) => {\r\n        //alert(\"Browser has loaded the current frame\");\r\n        //videopl.currentTime = 0.50;\r\n    });\r\n\r\n    //videopl.on('loadeddata', function () {\r\n    //    alert(\"Browser has loaded the current frame\");\r\n    //});\r\n\r\n    videopl.on(\"mouseover\", function () {\r\n        document.getElementById(\"room_name\").style.opacity = 1;\r\n    });\r\n    videopl.on(\"mouseout\", function () {\r\n        document.getElementById(\"room_name\").style.opacity = 0;\r\n    });\r\n    var myMiddleware = function (videopl) {\r\n        var tech;\r\n        var prevCurrentTime;\r\n\r\n        return {\r\n            setSource: function (srcObj, next) {\r\n                next(null, srcObj);\r\n            },\r\n            currentTime: function (ct) {\r\n                prevCurrentTime = ct;\r\n                return ct;\r\n            },\r\n            setCurrentTime: function (time) {\r\n                if (serverCurrentTimeCall == 0) {\r\n                    $.connection.groupHubs.server.timeUpdate(currentRoomName, time);\r\n                    console.log(time);\r\n                    prevCurrentTime = time;\r\n                    return time;\r\n                } else if (serverCurrentTimeCall == 1) {\r\n                    prevCurrentTime = time;\r\n                    serverCurrentTimeCall = 0;\r\n                    return time;\r\n                }\r\n\r\n            },\r\n            // Required for middleware. Simply passes along the source\r\n            loadeddata: function (time) {\r\n                //alert(\"Browser has loaded the current frame\");\r\n            }\r\n        };\r\n    };\r\n\r\n    videojs.use('*', myMiddleware);\r\n    videopl.playlist([]);\r\n    videopl.playlistUi({\r\n        el: document.getElementById('playlist-ui')\r\n    });\r\n\r\n    //var el = document.getElementsByClassName(\"vjs-playlist-item-list\");\r\n    //[].forEach.call(el, function (e) {\r\n    //    addEventListener(\"click\", function (e) {\r\n    //        console.log(e);\r\n    //        if (e.target && e.target.nodeName == \"LI\") {\r\n    //            console.log(e.target.id + \" was clicked\");\r\n    //        }\r\n    //    })\r\n    //var el = document.getElementsByClassName(\"vjs-playlist-item-list\");\r\n    //[].forEach.call(el, function (e) {\r\n    //    addEventListener(\"click\", function (e) {\r\n    //        console.log(e);\r\n    //        if (e.target && e.target.nodeName == \"LI\") {\r\n    //            console.log(e.target.id + \" was clicked\");\r\n    //        }\r\n    //    })\r\n    //\r\n    //    // e.target is our targetted element.\r\n    //    // try doing console.log(e.target.nodeName), it will result LI\r\n    //});\r\n    function notifyUserOfTryingToReconnect() {\r\n        // alert(\"TRYING TO RECCONECT\");\r\n    }\r\n    function notifyUserOfConnectionProblem() {\r\n        //alert(\"YOU HAVE A CONNECTION PROBLEM :)\");\r\n    }\r\n    function notifyUserOfDisconnect() {\r\n        // alert(\"DISCONECTED!!! :)\");\r\n    }\r\n    var getParams = function (url) {\r\n        var params = {};\r\n        var parser = document.createElement('a');\r\n        parser.href = url;\r\n        var query = parser.search.substring(1);\r\n        var vars = query.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            params[pair[0]] = decodeURIComponent(pair[1]);\r\n        }\r\n        return params;\r\n    };\r\n    function httpGetAsync(theUrl, callback) {\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.onreadystatechange = function () {\r\n            if (xmlHttp.readyState == 4 && xmlHttp.status == 200)\r\n                callback(xmlHttp.responseText);\r\n        };\r\n        xmlHttp.open(\"GET\", theUrl, true); // true for asynchronous \r\n        xmlHttp.setRequestHeader('Access-Control-Allow-Origin', 'null');\r\n        xmlHttp.setRequestHeader('Content-type', 'application/json');\r\n        xmlHttp.send(null);\r\n    }\r\n    function addElementPreview(videosJson) {\r\n        var videos = JSON.parse(videosJson);\r\n        var playlist = document.getElementById(\"playlist-ui2\");\r\n        videos.forEach(video => {\r\n            var new_video =\r\n                $(`<li class=\"playlist_item\">\r\n                        <div class=\"video_block\">\r\n                            <picture class=\"video_thumbnail\">`+\r\n                    `<source srcset=\"` + video.thumbnail[0].srcset + `\" type=\"` + video.thumbnail[0].type + `\">\r\n                                <img alt=\"\" src=\"` + video.thumbnail[1].src + `\">\r\n                            </picture>\r\n                            <span class=\"time_date\" id=\"msg_time\">` + video.duration + `</span>\r\n                        </div>\r\n                    </li>`).addClass('playlist_item');\r\n            new_video.appendTo('#playlist-ui2');\r\n        });\r\n        document.getElementById(\"elements_count\").innerHTML = $('#playlist-ui2 li').length;\r\n    }\r\n\r\n    $(function () {\r\n        var chat = $.connection.groupHubs;\r\n        var tryingToReconnect = false;\r\n        var isServerChangePlaylist = false;\r\n        var isChangeItem = false;\r\n        $.connection.hub.reconnected(function () {\r\n            tryingToReconnect = false;\r\n        });\r\n        $.connection.hub.reconnecting(function () {\r\n            tryingToReconnect = true;\r\n            notifyUserOfTryingToReconnect(); // Your function to notify user.\r\n        });\r\n        $.connection.hub.connectionSlow(function () {\r\n            notifyUserOfConnectionProblem(); // Your function to notify user.\r\n        });\r\n        $.connection.hub.disconnected(function () {\r\n            if (tryingToReconnect) {\r\n                notifyUserOfDisconnect(); // Your function to notify user.\r\n            }\r\n        });\r\n        chat.client.setTime = function (time) {\r\n            video.currentTime(time);\r\n        };\r\n        chat.client.groupPlay = function () {\r\n            videopl.play();\r\n        };\r\n        chat.client.groupPause = function () {\r\n            videopl.pause();\r\n        };\r\n        chat.client.timeUpdate = function (time) {\r\n            serverCurrentTimeCall = 1;\r\n            videopl.currentTime(time);\r\n        };\r\n        chat.client.forceTimeUpdateServer = function () {\r\n\r\n            $.connection.groupHubs.server.updateRoomTime(currentRoomName, videopl.currentTime());\r\n        };\r\n        var timeToSet = 0.0;\r\n        var setPlaylistIndexTimeSet = false;\r\n        chat.client.setPlaylistIndexTime = function (index, time) {\r\n            if (index != videopl.playlist.currentIndex()) {\r\n                isServerChangePlaylist = true;\r\n                videopl.playlist.currentItem(index);\r\n                console.log(\"442\" + isServerChangePlaylist);\r\n                setPlaylistIndexTimeSet = true;\r\n                timeToSet = time;\r\n            }\r\n            else {\r\n                setPlaylistIndexTimeSet = true;\r\n                timeToSet = time;\r\n            }\r\n            //  videopl.playlist.currentItem(index)\r\n\r\n\r\n        };\r\n        chat.client.previewVideoFromLink = function (videos) {\r\n            if (index != videopl.playlist.currentIndex()) {\r\n                isServerChangePlaylist = true;\r\n                videopl.playlist.currentItem(index);\r\n                console.log(\"442\" + isServerChangePlaylist);\r\n                setPlaylistIndexTimeSet = true;\r\n                timeToSet = time;\r\n            }\r\n            else {\r\n                setPlaylistIndexTimeSet = true;\r\n                timeToSet = time;\r\n            }\r\n            //  videopl.playlist.currentItem(index)\r\n\r\n\r\n        };\r\n\r\n        chat.client.previewLoadedVideos = function (videosJson, isSamePlaylist) {\r\n\r\n            var videos = JSON.parse(videosJson);\r\n            //  videopl.playlist.currentItem(index)\r\n\r\n            var playlist = document.getElementById(\"playlist-ui2\");\r\n            videos.forEach(video => {\r\n                var new_video =\r\n                    $(`<li class=\"playlist_item\">\r\n                    <div class=\"video_block\">\r\n                        <picture class=\"video_thumbnail\">`+\r\n                        `<source srcset=\"` + video.thumbnail[0].srcset + `\" type=\"` + video.thumbnail[0].type + `\">\r\n                            <img alt=\"\" src=\"` + video.thumbnail[1].src + `\">\r\n                        </picture>\r\n                        <span class=\"time_date\" id=\"msg_time\">` + video.duration + `</span>\r\n                    </div>\r\n                </li>`).addClass('playlist_item');\r\n                new_video.appendTo('#playlist-ui2');\r\n            });\r\n            document.getElementById(\"elements_count\").innerHTML = $('#playlist-ui2 li').length;\r\n\r\n        };\r\n\r\n        chat.client.changeVideoSource = function (source) {\r\n            var vid = JSON.parse(source);\r\n            //alert(typeof source);\r\n            //vid.forEach(function (item, i, arr) {\r\n            //    alert(i + \": \" + item.src + \" (массив:\" + arr + \")\");\r\n            //});\r\n            //var videosrc = [];\r\n            console.log(source);\r\n            //console.log( vid );\r\n            isServerChangePlaylist = true;\r\n            console.log(\"334\" + isServerChangePlaylist);\r\n            videopl.src(vid[0].src);\r\n            videopl.playlist(vid);\r\n            videopl.playlist.autoadvance(1);\r\n            videopl.playlist.repeat(false);\r\n            //videopl.src({ type: \"video/youtube\", src: source });\r\n        };\r\n        chat.client.addMessage = function (name, message, roomName, time) {\r\n            // Добавление сообщений на веб-страницу \r\n            //document.getElementById(\"add_to_me\").innerHTML +=\r\n            if (roomName == currentRoomName) {\r\n                /*$('#msg_history').append(\r\n                    '<li class= \"incoming_msg\" > ' +\r\n                        '<div class=\"incoming_msg_img\"> <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\"> </div>' +\r\n                            '<div class=\"received_msg\">' +\r\n                                '<div class=\"received_withd_msg\">' +\r\n                                    '<p>' +\r\n                                    message +\r\n                                    '</p >' +\r\n                                    '<span class=\"time_date\">' + time + '</span>' +\r\n                                 '</div>' +\r\n                            '</div>' +\r\n                        '</div>' +\r\n                    '</li>');*/\r\n\r\n                var new_message =\r\n                    $(`<li class=\"incoming_msg\">\r\n                <div class=\"received_msg\">\r\n                    <div class=\"received_msg sender_name\">` + name + `</div>\r\n                    <div class=\"received_withd_msg\">\r\n                        <p>` +\r\n                        message +\r\n                        `</p>\r\n                    </div>\r\n                    <span class=\"time_date\" id=\"msg_time\">` + time + `</span>\r\n                </div>\r\n            </li>`).addClass('incoming_msg');\r\n                new_message.appendTo('#msg_history');\r\n            }\r\n            else {\r\n                loadChatsView();\r\n            }\r\n        };\r\n        chat.client.addCallerMessage = function (name, message, time) {\r\n\r\n            $('#msg_history').append(`<li class=\"outgoing_msg\">\r\n            <div class=\"sent_msg\">\r\n                <div class=\"outgoing_msg sender_name\">\r\n                    <p>` +\r\n                name +\r\n                `</p>\r\n                </div>\r\n                <div class=\"received_withd_msg\">\r\n                    <p>` +\r\n                message +\r\n                `</p>\r\n                </div>\r\n                <span class=\"time_date\"> @msg.sendDate </span>\r\n            </div>\r\n        </li>`);\r\n            /*$('#msg_history').append(`<li class=\"outgoing_msg\">\r\n                                                <div class= \"sent_msg\">\r\n                                                    <p>`+\r\n                                                    message +\r\n                                                    `</p> \r\n                                                </div >\r\n                                                <span class=\"time_date\">`+ time + `</span>\r\n                                            </li >`\r\n            );*/\r\n            updateScroll();\r\n        };\r\n\r\n        // Функция, вызываемая при подключении нового пользователя\r\n        chat.client.onConnected = function (id, userName) {\r\n\r\n\r\n            $('#chatBody').show();\r\n            // установка в скрытых полях имени и id текущего пользователя\r\n            $('#hdId').val(id);\r\n            $('#username').val(userName);\r\n            if (currentRoomName !== undefined) {\r\n                chat.server.updatePlaylist(currentRoomName);\r\n                updateScroll();\r\n            }\r\n            chat.server.joinRoom(currentRoomName);\r\n            chat.server.requestTimeSynch(currentRoomName, userName);\r\n            chat.server.updateUsersInRoom(currentRoomName);\r\n            $('#header').html('<h3>Добро пожаловать, ' + userName + '</h3>');\r\n            console.log(userName);\r\n            console.log(userName);\r\n\r\n\r\n        };\r\n        function updateScroll() {\r\n            var element = document.getElementById(\"msg_history\");\r\n            element.scrollTop = element.scrollHeight;\r\n\r\n        }\r\n        // Добавляем нового пользователя\r\n        chat.client.onNewUserConnected = function (id, name) {\r\n\r\n            AddUser(id, name);\r\n        };\r\n        chat.client.synchWith = function (name) {\r\n            //console.log(\"User \" +name + \" time \" +videopl.currentTime());\r\n            //$.connection.groupHubs.server.setTimeForOtherClient(name, videopl.currentTime);\r\n            chat.server.setTimeForOtherClient(name, videopl.currentTime(), videopl.playlist.currentIndex());\r\n        };\r\n\r\n        // Удаляем пользователя\r\n        chat.client.onUserDisconnected = function (userName) {\r\n            if (currentRoomAnmin.userName == userName) {\r\n                chat.groupHubs.server.switchAdminForRoom(currentRoomName, userName);\r\n            }\r\n            //$('#' + id).remove();\r\n        };\r\n        // Удаляем пользователя\r\n        chat.client.updateUsersInRoom = function (roomJson) {\r\n            var room = JSON.parse(roomJson);\r\n\r\n            var newUserList = document.getElementById(\"user-list\");\r\n            newUserList.innerHTML = \"\";\r\n            room.Users.forEach(user => {\r\n                var newUserLi = document.createElement('li');\r\n                if (room.Admin.UserName === user.UserName) {\r\n\r\n                    newUserLi.appendChild(document.createTextNode(user.UserName + \"Admin\"));\r\n                }\r\n                else {\r\n\r\n                    newUserLi.appendChild(document.createTextNode(user.UserName));\r\n                }\r\n                newUserList.appendChild(newUserLi);\r\n            });\r\n            //$('#' + id).remove();\r\n        };\r\n        chat.client.changePlaylistItem = function (id) {\r\n            if (id != videopl.playlist.currentIndex()) {\r\n                console.log(\"442\" + isServerChangePlaylist);\r\n                isServerChangePlaylist = true;\r\n                videopl.playlist.currentItem(id);\r\n                videopl.currentTime(0.0);\r\n            }\r\n\r\n        };\r\n        videopl.on(\"playlistitem\", function (id, jd) {\r\n\r\n            if (!isServerChangePlaylist && jd.playlistItemId_ != videopl.playlist.currentIndex()) {\r\n                //alert(id + \" ::::: \" + jd + \" \" + isServerChangePlaylist + \" defined ID: \" + videopl.playlist.currentIndex());\r\n\r\n                $.connection.groupHubs.server.changePlaylistItem(currentRoomName, videopl.playlist.currentIndex());\r\n            }\r\n            else if (isServerChangePlaylist) {\r\n                //alert(id + \" \" +isServerChangePlaylist + \" server\");\r\n                isServerChangePlaylist = false;\r\n                console.log(\"458\" + isServerChangePlaylist);\r\n            }\r\n        });\r\n        videopl.on(\"sourceset\", function () {\r\n\r\n            console.log(\"sourceset\");\r\n\r\n        });\r\n        videopl.on(\"loadstart\", function () {\r\n            if (setPlaylistIndexTimeSet) {\r\n                videopl.currentTime(timeToSet);\r\n                console.log(\"loadstart\");\r\n                setPlaylistIndexTimeSet = false;\r\n                videopl.play();\r\n            }\r\n\r\n        });\r\n        videopl.on(\"loadedmetadata\", function () {\r\n\r\n            console.log(\"loadedmetadata\");\r\n\r\n        });\r\n        videopl.on(\"ready\", function () {\r\n\r\n            console.log(\"ready\");\r\n\r\n        });\r\n        videopl.on(\"canplay\", function () {\r\n\r\n            console.log(\"canplay\");\r\n\r\n        });\r\n        $.connection.hub.start().done(function () {\r\n            console.log(\"hub is ready\");\r\n\r\n            $('body').on('click', '.msg_send_btn', function () {\r\n                var msg = $('#write_msg').val();\r\n                if (msg.length != 0) {\r\n                    console.log(currentRoomName);\r\n                    chat.server.sendGroupMessage(currentRoomName, msg);\r\n                    $('#write_msg').val('');\r\n\r\n                }\r\n            });\r\n\r\n        }).fail(function (e) {\r\n            //alert('There was an error');\r\n            console.error(e);\r\n        });\r\n    });\r\n}\r\n// Кодирование тегов\r\nfunction htmlEncode(value) {\r\n    var encodedValue = $('<div />').text(value).html();\r\n    return encodedValue;\r\n}\r\n//Добавление нового пользователя\r\nfunction AddUser(id, name) {\r\n\r\n    var userId = $('#hdId').val();\r\n\r\n    if (userId != id) {\r\n\r\n        $(\"#chatusers\").append('<p id=\"' + id + '\"><b>' + name + '</b></p>');\r\n    }\r\n}","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.urlParser = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  var getQueryParams = function getQueryParams(qs) {\n    if (typeof qs !== 'string') {\n      return {};\n    }\n\n    qs = qs.split('+').join(' ');\n    var params = {};\n    var match = qs.match(/(?:[?](?:[^=]+)=(?:[^&#]*)(?:[&](?:[^=]+)=(?:[^&#]*))*(?:[#].*)?)|(?:[#].*)/);\n    var split;\n\n    if (match === null) {\n      return {};\n    }\n\n    split = match[0].substr(1).split(/[&#=]/);\n\n    for (var i = 0; i < split.length; i += 2) {\n      params[decodeURIComponent(split[i])] = decodeURIComponent(split[i + 1] || '');\n    }\n\n    return params;\n  };\n\n  var combineParams = function combineParams(params, hasParams) {\n    if (_typeof(params) !== 'object') {\n      return '';\n    }\n\n    var combined = '';\n    var i = 0;\n    var keys = Object.keys(params);\n\n    if (keys.length === 0) {\n      return '';\n    } //always have parameters in the same order\n\n\n    keys.sort();\n\n    if (!hasParams) {\n      combined += '?' + keys[0] + '=' + params[keys[0]];\n      i += 1;\n    }\n\n    for (; i < keys.length; i += 1) {\n      combined += '&' + keys[i] + '=' + params[keys[i]];\n    }\n\n    return combined;\n  }; //parses strings like 1h30m20s to seconds\n\n\n  function getLetterTime(timeString) {\n    var totalSeconds = 0;\n    var timeValues = {\n      's': 1,\n      'm': 1 * 60,\n      'h': 1 * 60 * 60,\n      'd': 1 * 60 * 60 * 24,\n      'w': 1 * 60 * 60 * 24 * 7\n    };\n    var timePairs; //expand to \"1 h 30 m 20 s\" and split\n\n    timeString = timeString.replace(/([smhdw])/g, ' $1 ').trim();\n    timePairs = timeString.split(' ');\n\n    for (var i = 0; i < timePairs.length; i += 2) {\n      totalSeconds += parseInt(timePairs[i], 10) * timeValues[timePairs[i + 1] || 's'];\n    }\n\n    return totalSeconds;\n  } //parses strings like 1:30:20 to seconds\n\n\n  function getColonTime(timeString) {\n    var totalSeconds = 0;\n    var timeValues = [1, 1 * 60, 1 * 60 * 60, 1 * 60 * 60 * 24, 1 * 60 * 60 * 24 * 7];\n    var timePairs = timeString.split(':');\n\n    for (var i = 0; i < timePairs.length; i++) {\n      totalSeconds += parseInt(timePairs[i], 10) * timeValues[timePairs.length - i - 1];\n    }\n\n    return totalSeconds;\n  }\n\n  var getTime = function getTime(timeString) {\n    if (typeof timeString === 'undefined') {\n      return 0;\n    }\n\n    if (timeString.match(/^(\\d+[smhdw]?)+$/)) {\n      return getLetterTime(timeString);\n    }\n\n    if (timeString.match(/^(\\d+:?)+$/)) {\n      return getColonTime(timeString);\n    }\n\n    return 0;\n  };\n\n  var util = {\n    getQueryParams: getQueryParams,\n    combineParams: combineParams,\n    getTime: getTime\n  };\n\n  var getQueryParams$1 = util.getQueryParams;\n\n  function UrlParser() {\n    for (var _i = 0, _arr = ['parseProvider', 'parse', 'bind', 'create']; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n      this[key] = this[key].bind(this);\n    }\n\n    this.plugins = {};\n  }\n\n  var urlParser = UrlParser;\n\n  UrlParser.prototype.parseProvider = function (url) {\n    var match = url.match(/(?:(?:https?:)?\\/\\/)?(?:[^.]+\\.)?(\\w+)\\./i);\n    return match ? match[1] : undefined;\n  };\n\n  UrlParser.prototype.parse = function (url) {\n    if (typeof url === 'undefined') {\n      return undefined;\n    }\n\n    var provider = this.parseProvider(url);\n    var result;\n    var plugin = this.plugins[provider];\n\n    if (!provider || !plugin || !plugin.parse) {\n      return undefined;\n    }\n\n    result = plugin.parse.call(plugin, url, getQueryParams$1(url));\n\n    if (result) {\n      result = removeEmptyParameters(result);\n      result.provider = plugin.provider;\n    }\n\n    return result;\n  };\n\n  UrlParser.prototype.bind = function (plugin) {\n    this.plugins[plugin.provider] = plugin;\n\n    if (plugin.alternatives) {\n      for (var i = 0; i < plugin.alternatives.length; i += 1) {\n        this.plugins[plugin.alternatives[i]] = plugin;\n      }\n    }\n  };\n\n  UrlParser.prototype.create = function (op) {\n    if (_typeof(op) !== 'object' || _typeof(op.videoInfo) !== 'object') {\n      return undefined;\n    }\n\n    var vi = op.videoInfo;\n    var params = op.params;\n    var plugin = this.plugins[vi.provider];\n    params = params === 'internal' ? vi.params : params || {};\n\n    if (plugin) {\n      op.format = op.format || plugin.defaultFormat; // eslint-disable-next-line no-prototype-builtins\n\n      if (plugin.formats.hasOwnProperty(op.format)) {\n        return plugin.formats[op.format].apply(plugin, [vi, Object.assign({}, params)]);\n      }\n    }\n\n    return undefined;\n  };\n\n  function removeEmptyParameters(result) {\n    if (result.params && Object.keys(result.params).length === 0) {\n      delete result.params;\n    }\n\n    return result;\n  }\n\n  var parser = new urlParser();\n  var base = parser;\n\n  var combineParams$1 = util.combineParams;\n\n  function CanalPlus() {\n    this.provider = 'canalplus';\n    this.defaultFormat = 'embed';\n    this.formats = {\n      embed: this.createEmbedUrl\n    };\n    this.mediaTypes = {\n      VIDEO: 'video'\n    };\n  }\n\n  CanalPlus.prototype.parseParameters = function (params) {\n    delete params.vid;\n    return params;\n  };\n\n  CanalPlus.prototype.parse = function (url, params) {\n    var _this = this;\n\n    var result = {\n      mediaType: this.mediaTypes.VIDEO,\n      id: params.vid\n    };\n    result.params = _this.parseParameters(params);\n\n    if (!result.id) {\n      return undefined;\n    }\n\n    return result;\n  };\n\n  CanalPlus.prototype.createEmbedUrl = function (vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = 'http://player.canalplus.fr/embed/';\n    params.vid = vi.id;\n    url += combineParams$1(params);\n    return url;\n  };\n\n  base.bind(new CanalPlus());\n\n  var combineParams$2 = util.combineParams;\n\n  function Coub() {\n    this.provider = 'coub';\n    this.defaultFormat = 'long';\n    this.formats = {\n      \"long\": this.createLongUrl,\n      embed: this.createEmbedUrl\n    };\n    this.mediaTypes = {\n      VIDEO: 'video'\n    };\n  }\n\n  Coub.prototype.parseUrl = function (url) {\n    var match = url.match(/(?:embed|view)\\/([a-zA-Z\\d]+)/i);\n    return match ? match[1] : undefined;\n  };\n\n  Coub.prototype.parse = function (url, params) {\n    var result = {\n      mediaType: this.mediaTypes.VIDEO,\n      params: params,\n      id: this.parseUrl(url)\n    };\n\n    if (!result.id) {\n      return undefined;\n    }\n\n    return result;\n  };\n\n  Coub.prototype.createUrl = function (baseUrl, vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = baseUrl + vi.id;\n    url += combineParams$2(params);\n    return url;\n  };\n\n  Coub.prototype.createLongUrl = function (vi, params) {\n    return this.createUrl('https://coub.com/view/', vi, params);\n  };\n\n  Coub.prototype.createEmbedUrl = function (vi, params) {\n    return this.createUrl('//coub.com/embed/', vi, params);\n  };\n\n  base.bind(new Coub());\n\n  var combineParams$3 = util.combineParams,\n      getTime$1 = util.getTime;\n\n  function Dailymotion() {\n    this.provider = 'dailymotion';\n    this.alternatives = ['dai'];\n    this.defaultFormat = 'long';\n    this.formats = {\n      \"short\": this.createShortUrl,\n      \"long\": this.createLongUrl,\n      embed: this.createEmbedUrl,\n      image: this.createImageUrl\n    };\n    this.mediaTypes = {\n      VIDEO: 'video'\n    };\n  }\n\n  Dailymotion.prototype.parseParameters = function (params) {\n    return this.parseTime(params);\n  };\n\n  Dailymotion.prototype.parseTime = function (params) {\n    if (params.start) {\n      params.start = getTime$1(params.start);\n    }\n\n    return params;\n  };\n\n  Dailymotion.prototype.parseUrl = function (url) {\n    var match = url.match(/(?:\\/video|ly)\\/([A-Za-z0-9]+)/i);\n    return match ? match[1] : undefined;\n  };\n\n  Dailymotion.prototype.parse = function (url, params) {\n    var _this = this;\n\n    var result = {\n      mediaType: this.mediaTypes.VIDEO,\n      params: _this.parseParameters(params),\n      id: _this.parseUrl(url)\n    };\n    return result.id ? result : undefined;\n  };\n\n  Dailymotion.prototype.createUrl = function (base, vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    return base + vi.id + combineParams$3(params);\n  };\n\n  Dailymotion.prototype.createShortUrl = function (vi, params) {\n    return this.createUrl('https://dai.ly/', vi, params);\n  };\n\n  Dailymotion.prototype.createLongUrl = function (vi, params) {\n    return this.createUrl('https://dailymotion.com/video/', vi, params);\n  };\n\n  Dailymotion.prototype.createEmbedUrl = function (vi, params) {\n    return this.createUrl('https://www.dailymotion.com/embed/video/', vi, params);\n  };\n\n  Dailymotion.prototype.createImageUrl = function (vi, params) {\n    delete params.start;\n    return this.createUrl('https://www.dailymotion.com/thumbnail/video/', vi, params);\n  };\n\n  base.bind(new Dailymotion());\n\n  var combineParams$4 = util.combineParams,\n      getTime$2 = util.getTime;\n\n  function Twitch() {\n    this.provider = 'twitch';\n    this.defaultFormat = 'long';\n    this.formats = {\n      \"long\": this.createLongUrl,\n      embed: this.createEmbedUrl\n    };\n    this.mediaTypes = {\n      VIDEO: 'video',\n      STREAM: 'stream',\n      CLIP: 'clip'\n    };\n  }\n\n  Twitch.prototype.seperateId = function (id) {\n    return {\n      pre: id[0],\n      id: id.substr(1)\n    };\n  };\n\n  Twitch.prototype.parseChannel = function (result, params) {\n    var channel = params.channel || params.utm_content || result.channel;\n    delete params.utm_content;\n    delete params.channel;\n    return channel;\n  };\n\n  Twitch.prototype.parseUrl = function (url, result, params) {\n    var match;\n    match = url.match(/(clips\\.)?twitch\\.tv\\/(?:(?:videos\\/(\\d+))|(\\w+)(?:\\/clip\\/(\\w+))?)/i);\n\n    if (match && match[2]) {\n      //video\n      result.id = 'v' + match[2];\n    } else if (params.video) {\n      //video embed\n      result.id = params.video;\n      delete params.video;\n    } else if (params.clip) {\n      //clips embed\n      result.id = params.clip;\n      result.isClip = true;\n      delete params.clip;\n    } else if (match && match[1] && match[3]) {\n      //clips.twitch.tv/id\n      result.id = match[3];\n      result.isClip = true;\n    } else if (match && match[3] && match[4]) {\n      //twitch.tv/channel/clip/id\n      result.channel = match[3];\n      result.id = match[4];\n      result.isClip = true;\n    } else if (match && match[3]) {\n      result.channel = match[3];\n    }\n\n    return result;\n  };\n\n  Twitch.prototype.parseMediaType = function (result) {\n    var mediaType;\n\n    if (result.id) {\n      if (result.isClip) {\n        mediaType = this.mediaTypes.CLIP;\n        delete result.isClip;\n      } else {\n        mediaType = this.mediaTypes.VIDEO;\n      }\n    } else if (result.channel) {\n      mediaType = this.mediaTypes.STREAM;\n    }\n\n    return mediaType;\n  };\n\n  Twitch.prototype.parseParameters = function (params) {\n    if (params.t) {\n      params.start = getTime$2(params.t);\n      delete params.t;\n    }\n\n    return params;\n  };\n\n  Twitch.prototype.parse = function (url, params) {\n    var _this = this;\n\n    var result = {};\n    result = _this.parseUrl(url, result, params);\n    result.channel = _this.parseChannel(result, params);\n    result.mediaType = _this.parseMediaType(result);\n    result.params = _this.parseParameters(params);\n    return result.channel || result.id ? result : undefined;\n  };\n\n  Twitch.prototype.createLongUrl = function (vi, params) {\n    var url = '';\n\n    if (vi.mediaType === this.mediaTypes.STREAM && vi.channel) {\n      url = 'https://twitch.tv/' + vi.channel;\n    } else if (vi.mediaType === this.mediaTypes.VIDEO && vi.id) {\n      var sep = this.seperateId(vi.id);\n      url = 'https://twitch.tv/videos/' + sep.id;\n\n      if (params.start) {\n        params.t = params.start + 's';\n        delete params.start;\n      }\n    } else if (vi.mediaType === this.mediaTypes.CLIP && vi.id) {\n      if (vi.channel) {\n        url = 'https://www.twitch.tv/' + vi.channel + '/clip/' + vi.id;\n      } else {\n        url = 'https://clips.twitch.tv/' + vi.id;\n      }\n    } else {\n      return undefined;\n    }\n\n    url += combineParams$4(params);\n    return url;\n  };\n\n  Twitch.prototype.createEmbedUrl = function (vi, params) {\n    var url = 'https://player.twitch.tv/';\n\n    if (vi.mediaType === this.mediaTypes.STREAM && vi.channel) {\n      params.channel = vi.channel;\n    } else if (vi.mediaType === this.mediaTypes.VIDEO && vi.id) {\n      params.video = vi.id;\n\n      if (params.start) {\n        params.t = params.start + 's';\n        delete params.start;\n      }\n    } else if (vi.mediaType === this.mediaTypes.CLIP && vi.id) {\n      url = 'https://clips.twitch.tv/embed';\n      params.clip = vi.id;\n    } else {\n      return undefined;\n    }\n\n    url += combineParams$4(params);\n    return url;\n  };\n\n  base.bind(new Twitch());\n\n  var combineParams$5 = util.combineParams,\n      getTime$3 = util.getTime;\n\n  function Vimeo() {\n    this.provider = 'vimeo';\n    this.alternatives = ['vimeopro', 'vimeocdn'];\n    this.defaultFormat = 'long';\n    this.formats = {\n      \"long\": this.createLongUrl,\n      embed: this.createEmbedUrl,\n      image: this.createImageUrl\n    };\n    this.mediaTypes = {\n      VIDEO: 'video'\n    };\n  }\n\n  Vimeo.prototype.parseUrl = function (url, result) {\n    var match = url.match(/(vimeo(?:cdn|pro)?)\\.com\\/(?:(?:channels\\/[\\w]+|(?:(?:album\\/\\d+|groups\\/[\\w]+|staff\\/frame)\\/)?videos?)\\/)?(\\d+)(?:_(\\d+)(?:x(\\d+))?)?(\\.\\w+)?/i);\n\n    if (!match) {\n      return result;\n    }\n\n    result.id = match[2];\n\n    if (match[1] === 'vimeocdn') {\n      if (match[3]) {\n        result.imageWidth = parseInt(match[3]);\n\n        if (match[4]) {\n          //height can only be set when width is also set\n          result.imageHeight = parseInt(match[4]);\n        }\n      }\n\n      result.imageExtension = match[5];\n    }\n\n    return result;\n  };\n\n  Vimeo.prototype.parseParameters = function (params) {\n    return this.parseTime(params);\n  };\n\n  Vimeo.prototype.parseTime = function (params) {\n    if (params.t) {\n      params.start = getTime$3(params.t);\n      delete params.t;\n    }\n\n    return params;\n  };\n\n  Vimeo.prototype.parse = function (url, params) {\n    var result = {\n      mediaType: this.mediaTypes.VIDEO,\n      params: this.parseParameters(params)\n    };\n    result = this.parseUrl(url, result);\n    return result.id ? result : undefined;\n  };\n\n  Vimeo.prototype.createUrl = function (baseUrl, vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = baseUrl + vi.id;\n    var startTime = params.start;\n    delete params.start;\n    url += combineParams$5(params);\n\n    if (startTime) {\n      url += '#t=' + startTime;\n    }\n\n    return url;\n  };\n\n  Vimeo.prototype.createLongUrl = function (vi, params) {\n    return this.createUrl('https://vimeo.com/', vi, params);\n  };\n\n  Vimeo.prototype.createEmbedUrl = function (vi, params) {\n    return this.createUrl('//player.vimeo.com/video/', vi, params);\n  };\n\n  Vimeo.prototype.createImageUrl = function (vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = 'https://i.vimeocdn.com/video/' + vi.id;\n\n    if (vi.imageWidth && vi.imageHeight) {\n      url += '_' + vi.imageWidth + 'x' + vi.imageHeight;\n    } else if (vi.imageWidth) {\n      url += '_' + vi.imageWidth;\n    }\n\n    if (vi.imageExtension === undefined) {\n      vi.imageExtension = '.webp';\n    }\n\n    url += vi.imageExtension;\n    delete vi.imageExtension;\n    url += combineParams$5(params);\n    return url;\n  };\n\n  base.bind(new Vimeo());\n\n  var combineParams$6 = util.combineParams,\n      getTime$4 = util.getTime;\n\n  function Wistia() {\n    this.provider = 'wistia';\n    this.alternatives = [];\n    this.defaultFormat = 'long';\n    this.formats = {\n      \"long\": this.createLongUrl,\n      embed: this.createEmbedUrl,\n      embedjsonp: this.createEmbedJsonpUrl\n    };\n    this.mediaTypes = {\n      VIDEO: 'video',\n      EMBEDVIDEO: 'embedvideo'\n    };\n  }\n\n  Wistia.prototype.parseUrl = function (url) {\n    var match = url.match(/(?:(?:medias|iframe)\\/|wvideo=)([\\w-]+)/);\n    return match ? match[1] : undefined;\n  };\n\n  Wistia.prototype.parseChannel = function (url) {\n    var match = url.match(/(?:(?:https?:)?\\/\\/)?([^.]*)\\.wistia\\./);\n    var channel = match ? match[1] : undefined;\n\n    if (channel === 'fast' || channel === 'content') {\n      return undefined;\n    }\n\n    return channel;\n  };\n\n  Wistia.prototype.parseParameters = function (params, result) {\n    if (params.wtime) {\n      params.start = getTime$4(params.wtime);\n      delete params.wtime;\n    }\n\n    if (params.wvideo === result.id) {\n      delete params.wvideo;\n    }\n\n    return params;\n  };\n\n  Wistia.prototype.parseMediaType = function (result) {\n    if (result.id && result.channel) {\n      return this.mediaTypes.VIDEO;\n    } else if (result.id) {\n      delete result.channel;\n      return this.mediaTypes.EMBEDVIDEO;\n    } else {\n      return undefined;\n    }\n  };\n\n  Wistia.prototype.parse = function (url, params) {\n    var result = {\n      id: this.parseUrl(url),\n      channel: this.parseChannel(url)\n    };\n    result.params = this.parseParameters(params, result);\n    result.mediaType = this.parseMediaType(result);\n\n    if (!result.id) {\n      return undefined;\n    }\n\n    return result;\n  };\n\n  Wistia.prototype.createUrl = function (vi, params, url) {\n    if (params.start) {\n      params.wtime = params.start;\n      delete params.start;\n    }\n\n    url += combineParams$6(params);\n    return url;\n  };\n\n  Wistia.prototype.createLongUrl = function (vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = 'https://' + vi.channel + '.wistia.com/medias/' + vi.id;\n    return this.createUrl(vi, params, url);\n  };\n\n  Wistia.prototype.createEmbedUrl = function (vi, params) {\n    if (!vi.id || !(vi.mediaType === this.mediaTypes.VIDEO || vi.mediaType === this.mediaTypes.EMBEDVIDEO)) {\n      return undefined;\n    }\n\n    var url = 'https://fast.wistia.com/embed/iframe/' + vi.id;\n    return this.createUrl(vi, params, url);\n  };\n\n  Wistia.prototype.createEmbedJsonpUrl = function (vi) {\n    if (!vi.id || !(vi.mediaType === this.mediaTypes.VIDEO || vi.mediaType === this.mediaTypes.EMBEDVIDEO)) {\n      return undefined;\n    }\n\n    return 'https://fast.wistia.com/embed/medias/' + vi.id + '.jsonp';\n  };\n\n  base.bind(new Wistia());\n\n  var combineParams$7 = util.combineParams;\n\n  function Youku() {\n    this.provider = 'youku';\n    this.defaultFormat = 'long';\n    this.formats = {\n      embed: this.createEmbedUrl,\n      \"long\": this.createLongUrl,\n      flash: this.createFlashUrl,\n      \"static\": this.createStaticUrl\n    };\n    this.mediaTypes = {\n      VIDEO: 'video'\n    };\n  }\n\n  Youku.prototype.parseUrl = function (url) {\n    var match = url.match(/(?:(?:embed|sid)\\/|v_show\\/id_|VideoIDS=)([a-zA-Z0-9]+)/);\n    return match ? match[1] : undefined;\n  };\n\n  Youku.prototype.parseParameters = function (params) {\n    if (params.VideoIDS) {\n      delete params.VideoIDS;\n    }\n\n    return params;\n  };\n\n  Youku.prototype.parse = function (url, params) {\n    var _this = this;\n\n    var result = {\n      mediaType: this.mediaTypes.VIDEO,\n      id: _this.parseUrl(url),\n      params: _this.parseParameters(params)\n    };\n\n    if (!result.id) {\n      return undefined;\n    }\n\n    return result;\n  };\n\n  Youku.prototype.createUrl = function (baseUrl, vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = baseUrl + vi.id;\n    url += combineParams$7(params);\n    return url;\n  };\n\n  Youku.prototype.createEmbedUrl = function (vi, params) {\n    return this.createUrl('http://player.youku.com/embed/', vi, params);\n  };\n\n  Youku.prototype.createLongUrl = function (vi, params) {\n    return this.createUrl('http://v.youku.com/v_show/id_', vi, params);\n  };\n\n  Youku.prototype.createStaticUrl = function (vi, params) {\n    return this.createUrl('http://static.youku.com/v1.0.0638/v/swf/loader.swf?VideoIDS=', vi, params);\n  };\n\n  Youku.prototype.createFlashUrl = function (vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = 'http://player.youku.com/player.php/sid/' + vi.id + '/v.swf';\n    url += combineParams$7(params);\n    return url;\n  };\n\n  base.bind(new Youku());\n\n  var combineParams$8 = util.combineParams,\n      getTime$5 = util.getTime;\n\n  function YouTube() {\n    this.provider = 'youtube';\n    this.alternatives = ['youtu', 'ytimg'];\n    this.defaultFormat = 'long';\n    this.formats = {\n      \"short\": this.createShortUrl,\n      \"long\": this.createLongUrl,\n      embed: this.createEmbedUrl,\n      shortImage: this.createShortImageUrl,\n      longImage: this.createLongImageUrl\n    };\n    this.imageQualities = {\n      '0': '0',\n      '1': '1',\n      '2': '2',\n      '3': '3',\n      DEFAULT: 'default',\n      HQDEFAULT: 'hqdefault',\n      SDDEFAULT: 'sddefault',\n      MQDEFAULT: 'mqdefault',\n      MAXRESDEFAULT: 'maxresdefault'\n    };\n    this.defaultImageQuality = this.imageQualities.HQDEFAULT;\n    this.mediaTypes = {\n      VIDEO: 'video',\n      PLAYLIST: 'playlist',\n      SHARE: 'share',\n      CHANNEL: 'channel'\n    };\n  }\n\n  YouTube.prototype.parseVideoUrl = function (url) {\n    var match = url.match(/(?:(?:v|vi|be|videos|embed)\\/(?!videoseries)|(?:v|ci)=)([\\w-]{11})/i);\n    return match ? match[1] : undefined;\n  };\n\n  YouTube.prototype.parseChannelUrl = function (url) {\n    // Match an opaque channel ID\n    var match = url.match(/\\/channel\\/([\\w-]+)/);\n\n    if (match) {\n      return {\n        id: match[1],\n        mediaType: this.mediaTypes.CHANNEL\n      };\n    } // Match a vanity channel name or a user name. User urls are deprecated and\n    // currently redirect to the channel of that same name.\n\n\n    match = url.match(/\\/(?:c|user)\\/([\\w-]+)/);\n\n    if (match) {\n      return {\n        name: match[1],\n        mediaType: this.mediaTypes.CHANNEL\n      };\n    }\n  };\n\n  YouTube.prototype.parseParameters = function (params, result) {\n    if (params.start || params.t) {\n      params.start = getTime$5(params.start || params.t);\n      delete params.t;\n    }\n\n    if (params.v === result.id) {\n      delete params.v;\n    }\n\n    if (params.list === result.id) {\n      delete params.list;\n    }\n\n    return params;\n  };\n\n  YouTube.prototype.parseMediaType = function (result) {\n    if (result.params.list) {\n      result.list = result.params.list;\n      delete result.params.list;\n    }\n\n    if (result.id && !result.params.ci) {\n      result.mediaType = this.mediaTypes.VIDEO;\n    } else if (result.list) {\n      delete result.id;\n      result.mediaType = this.mediaTypes.PLAYLIST;\n    } else if (result.params.ci) {\n      delete result.params.ci;\n      result.mediaType = this.mediaTypes.SHARE;\n    } else {\n      return undefined;\n    }\n\n    return result;\n  };\n\n  YouTube.prototype.parse = function (url, params) {\n    var channelResult = this.parseChannelUrl(url);\n\n    if (channelResult) {\n      return channelResult;\n    } else {\n      var result = {\n        params: params,\n        id: this.parseVideoUrl(url)\n      };\n      result.params = this.parseParameters(params, result);\n      result = this.parseMediaType(result);\n      return result;\n    }\n  };\n\n  YouTube.prototype.createShortUrl = function (vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = 'https://youtu.be/' + vi.id;\n\n    if (params.start) {\n      url += '#t=' + params.start;\n    }\n\n    return url;\n  };\n\n  YouTube.prototype.createLongUrl = function (vi, params) {\n    var url = '';\n    var startTime = params.start;\n    delete params.start;\n\n    if (vi.mediaType === this.mediaTypes.CHANNEL) {\n      if (vi.id) {\n        url += 'https://www.youtube.com/channel/' + vi.id;\n      } else if (vi.name) {\n        url += 'https://www.youtube.com/c/' + vi.name;\n      } else {\n        return undefined;\n      }\n    } else if (vi.mediaType === this.mediaTypes.PLAYLIST && vi.list) {\n      params.feature = 'share';\n      url += 'https://www.youtube.com/playlist';\n    } else if (vi.mediaType === this.mediaTypes.VIDEO && vi.id) {\n      params.v = vi.id;\n      url += 'https://www.youtube.com/watch';\n    } else if (vi.mediaType === this.mediaTypes.SHARE && vi.id) {\n      params.ci = vi.id;\n      url += 'https://www.youtube.com/shared';\n    } else {\n      return undefined;\n    }\n\n    if (vi.list) {\n      params.list = vi.list;\n    }\n\n    url += combineParams$8(params);\n\n    if (vi.mediaType !== this.mediaTypes.PLAYLIST && startTime) {\n      url += '#t=' + startTime;\n    }\n\n    return url;\n  };\n\n  YouTube.prototype.createEmbedUrl = function (vi, params) {\n    var url = 'https://www.youtube.com/embed';\n\n    if (vi.mediaType === this.mediaTypes.PLAYLIST && vi.list) {\n      params.listType = 'playlist';\n    } else if (vi.mediaType === this.mediaTypes.VIDEO && vi.id) {\n      url += '/' + vi.id; //loop hack\n\n      if (params.loop === '1') {\n        params.playlist = vi.id;\n      }\n    } else {\n      return undefined;\n    }\n\n    if (vi.list) {\n      params.list = vi.list;\n    }\n\n    url += combineParams$8(params);\n    return url;\n  };\n\n  YouTube.prototype.createImageUrl = function (baseUrl, vi, params) {\n    if (!vi.id || vi.mediaType !== this.mediaTypes.VIDEO) {\n      return undefined;\n    }\n\n    var url = baseUrl + vi.id + '/';\n    var quality = params.imageQuality || this.defaultImageQuality;\n    return url + quality + '.jpg';\n  };\n\n  YouTube.prototype.createShortImageUrl = function (vi, params) {\n    return this.createImageUrl('https://i.ytimg.com/vi/', vi, params);\n  };\n\n  YouTube.prototype.createLongImageUrl = function (vi, params) {\n    return this.createImageUrl('https://img.youtube.com/vi/', vi, params);\n  };\n\n  base.bind(new YouTube());\n\n  var combineParams$9 = util.combineParams,\n      getTime$6 = util.getTime;\n\n  function SoundCloud() {\n    this.provider = 'soundcloud';\n    this.defaultFormat = 'long';\n    this.formats = {\n      \"long\": this.createLongUrl,\n      embed: this.createEmbedUrl\n    };\n    this.mediaTypes = {\n      TRACK: 'track',\n      PLAYLIST: 'playlist',\n      APITRACK: 'apitrack',\n      APIPLAYLIST: 'apiplaylist'\n    };\n  }\n\n  SoundCloud.prototype.parseUrl = function (url, result) {\n    var match = url.match(/(?:m\\.)?soundcloud\\.com\\/(?:([\\w-]+)\\/(sets\\/)?)([\\w-]+)/i);\n\n    if (!match) {\n      return result;\n    }\n\n    result.channel = match[1];\n\n    if (match[1] === 'playlists' || match[2]) {\n      //playlist\n      result.list = match[3];\n    } else {\n      //track\n      result.id = match[3];\n    }\n\n    return result;\n  };\n\n  SoundCloud.prototype.parseParameters = function (params) {\n    if (params.t) {\n      params.start = getTime$6(params.t);\n      delete params.t;\n    }\n\n    return params;\n  };\n\n  SoundCloud.prototype.parseMediaType = function (result) {\n    if (result.id) {\n      if (result.channel === 'tracks') {\n        delete result.channel;\n        delete result.params.url;\n        result.mediaType = this.mediaTypes.APITRACK;\n      } else {\n        result.mediaType = this.mediaTypes.TRACK;\n      }\n    }\n\n    if (result.list) {\n      if (result.channel === 'playlists') {\n        delete result.channel;\n        delete result.params.url;\n        result.mediaType = this.mediaTypes.APIPLAYLIST;\n      } else {\n        result.mediaType = this.mediaTypes.PLAYLIST;\n      }\n    }\n\n    return result;\n  };\n\n  SoundCloud.prototype.parse = function (url, params) {\n    var result = {};\n    result = this.parseUrl(url, result);\n    result.params = this.parseParameters(params);\n    result = this.parseMediaType(result);\n\n    if (!result.id && !result.list) {\n      return undefined;\n    }\n\n    return result;\n  };\n\n  SoundCloud.prototype.createLongUrl = function (vi, params) {\n    var url = '';\n    var startTime = params.start;\n    delete params.start;\n\n    if (vi.mediaType === this.mediaTypes.TRACK && vi.id && vi.channel) {\n      url = 'https://soundcloud.com/' + vi.channel + '/' + vi.id;\n    } else if (vi.mediaType === this.mediaTypes.PLAYLIST && vi.list && vi.channel) {\n      url = 'https://soundcloud.com/' + vi.channel + '/sets/' + vi.list;\n    } else if (vi.mediaType === this.mediaTypes.APITRACK && vi.id) {\n      url = 'https://api.soundcloud.com/tracks/' + vi.id;\n    } else if (vi.mediaType === this.mediaTypes.APIPLAYLIST && vi.list) {\n      url = 'https://api.soundcloud.com/playlists/' + vi.list;\n    } else {\n      return undefined;\n    }\n\n    url += combineParams$9(params);\n\n    if (startTime) {\n      url += '#t=' + startTime;\n    }\n\n    return url;\n  };\n\n  SoundCloud.prototype.createEmbedUrl = function (vi, params) {\n    var url = 'https://w.soundcloud.com/player/';\n    delete params.start;\n\n    if (vi.mediaType === this.mediaTypes.APITRACK && vi.id) {\n      params.url = 'https%3A//api.soundcloud.com/tracks/' + vi.id;\n    } else if (vi.mediaType === this.mediaTypes.APIPLAYLIST && vi.list) {\n      params.url = 'https%3A//api.soundcloud.com/playlists/' + vi.list;\n    } else {\n      return undefined;\n    }\n\n    url += combineParams$9(params);\n    return url;\n  };\n\n  base.bind(new SoundCloud());\n\n  var combineParams$a = util.combineParams;\n\n  function TeacherTube() {\n    this.provider = 'teachertube';\n    this.alternatives = [];\n    this.defaultFormat = 'long';\n    this.formats = {\n      \"long\": this.createLongUrl,\n      embed: this.createEmbedUrl\n    };\n    this.mediaTypes = {\n      VIDEO: 'video',\n      AUDIO: 'audio',\n      DOCUMENT: 'document',\n      CHANNEL: 'channel',\n      COLLECTION: 'collection',\n      GROUP: 'group'\n    };\n  }\n\n  TeacherTube.prototype.parse = function (url, params) {\n    var result = {};\n    result.list = this.parsePlaylist(params);\n    result.params = params;\n    var match = url.match(/\\/(audio|video|document|user\\/channel|collection|group)\\/(?:[\\w-]+-)?(\\w+)/);\n\n    if (!match) {\n      return undefined;\n    }\n\n    result.mediaType = this.parseMediaType(match[1]);\n    result.id = match[2];\n    return result;\n  };\n\n  TeacherTube.prototype.parsePlaylist = function (params) {\n    if (params['playlist-id']) {\n      var list = params['playlist-id'];\n      delete params['playlist-id'];\n      return list;\n    }\n\n    return undefined;\n  };\n\n  TeacherTube.prototype.parseMediaType = function (mediaTypeMatch) {\n    switch (mediaTypeMatch) {\n      case 'audio':\n        return this.mediaTypes.AUDIO;\n\n      case 'video':\n        return this.mediaTypes.VIDEO;\n\n      case 'document':\n        return this.mediaTypes.DOCUMENT;\n\n      case 'user/channel':\n        return this.mediaTypes.CHANNEL;\n\n      case 'collection':\n        return this.mediaTypes.COLLECTION;\n\n      case 'group':\n        return this.mediaTypes.GROUP;\n    }\n  };\n\n  TeacherTube.prototype.createLongUrl = function (vi, params) {\n    if (!vi.id) {\n      return undefined;\n    }\n\n    var url = 'https://www.teachertube.com/';\n\n    if (vi.list) {\n      params['playlist-id'] = vi.list;\n    }\n\n    if (vi.mediaType === this.mediaTypes.CHANNEL) {\n      url += 'user/channel/';\n    } else {\n      url += vi.mediaType + '/';\n    }\n\n    url += vi.id;\n    url += combineParams$a(params);\n    return url;\n  };\n\n  TeacherTube.prototype.createEmbedUrl = function (vi, params) {\n    if (!vi.id) {\n      return undefined;\n    }\n\n    var url = 'https://www.teachertube.com/embed/';\n\n    if (vi.mediaType === this.mediaTypes.VIDEO || vi.mediaType === this.mediaTypes.AUDIO) {\n      url += vi.mediaType + '/' + vi.id;\n    } else {\n      return undefined;\n    }\n\n    url += combineParams$a(params);\n    return url;\n  };\n\n  base.bind(new TeacherTube());\n\n  var lib = base;\n\n  return lib;\n\n})));\n"],"sourceRoot":""}